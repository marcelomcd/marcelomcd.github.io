// Interações: menu mobile, animações on-scroll, form submit simulado e animação de digitação adicional
document.addEventListener("DOMContentLoaded", () => {
  // mobile nav toggle
  const toggle = document.querySelector(".nav-toggle");
  const navList = document.querySelector(".nav-list");
  toggle.addEventListener("click", () => {
    const showing = navList.style.display === "flex";
    navList.style.display = showing ? "none" : "flex";
  });

  // on-scroll animation (simple)
  const obs = new IntersectionObserver(
    (entries) => {
      entries.forEach((e) => {
        if (e.isIntersecting) e.target.classList.add("in-view");
      });
    },
    { threshold: 0.12 }
  );
  document.querySelectorAll("[data-anim]").forEach((el) => obs.observe(el));

  // contact form simulated submit
  const form = document.getElementById("contactForm");
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const name = document.getElementById("name").value;
    // fake send
    const btn = form.querySelector("button");
    btn.textContent = "Enviando...";
    btn.disabled = true;
    setTimeout(() => {
      btn.textContent = "Mensagem enviada";
      btn.classList.remove("btn-primary");
      btn.style.background = "linear-gradient(90deg,#22c1c3,#06b6d4)";
      alert(`Obrigado, ${name}! Mensagem simulada enviada.`);
      btn.textContent = "Enviar mensagem";
      btn.disabled = false;
    }, 1200);
  });

  // simple typing effect for subtitle (adds small loop)
  const title = document.querySelector(".typing");
  const full = title.textContent;
  // already using CSS typing; small JS loop to restart
  setInterval(() => {
    title.classList.remove("retyped");
    void title.offsetWidth;
    title.classList.add("retyped");
  }, 7000);
});
